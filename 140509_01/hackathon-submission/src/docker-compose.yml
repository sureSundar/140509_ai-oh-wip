version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: retailai
      POSTGRES_USER: retailai
      POSTGRES_PASSWORD: retailai123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init-db.sql:/docker-entrypoint-initdb.d/init.sql

  clickhouse:
    image: clickhouse/clickhouse-server:22.8
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./infrastructure/clickhouse-init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Application Services
  api-gateway:
    build: 
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://retailai:retailai123@postgres:5432/retailai
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka

  data-ingestion:
    build:
      context: ./services/data-ingestion
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://retailai:retailai123@postgres:5432/retailai
      CLICKHOUSE_URL: http://clickhouse:8123
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - postgres
      - clickhouse
      - kafka

  ml-engine:
    build:
      context: ./services/ml-engine
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://retailai:retailai123@postgres:5432/retailai
      CLICKHOUSE_URL: http://clickhouse:8123
      MLFLOW_TRACKING_URI: http://mlflow:5000
    depends_on:
      - postgres
      - clickhouse
      - mlflow

  inventory-service:
    build:
      context: ./services/inventory-service
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://retailai:retailai123@postgres:5432/retailai
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    environment:
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - redis
      - kafka

  mlflow:
    image: python:3.9-slim
    command: >
      bash -c "pip install mlflow psycopg2-binary &&
               mlflow server --host 0.0.0.0 --port 5000 
               --backend-store-uri postgresql://retailai:retailai123@postgres:5432/mlflow
               --default-artifact-root /mlflow/artifacts"
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow/artifacts
    depends_on:
      - postgres

  # Frontend Services
  executive-dashboard:
    build:
      context: ./frontend/executive-dashboard
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000/api

  operational-dashboard:
    build:
      context: ./frontend/operational-dashboard
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3000/api

volumes:
  postgres_data:
  clickhouse_data:
  redis_data:
  mlflow_data:

networks:
  default:
    driver: bridge